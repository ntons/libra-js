// source: dbapi/v1/db.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var dbapi_v1_archive_pb = require('../../dbapi/v1/archive_pb.js');
goog.object.extend(proto, dbapi_v1_archive_pb);
var google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');
goog.object.extend(proto, google_protobuf_descriptor_pb);
goog.exportSymbol('proto.libra.dbapi.v1.ArchiveGetRequest', null, global);
goog.exportSymbol('proto.libra.dbapi.v1.ArchiveGetResponse', null, global);
goog.exportSymbol('proto.libra.dbapi.v1.ArchiveSetRequest', null, global);
goog.exportSymbol('proto.libra.dbapi.v1.ArchiveSetResponse', null, global);
goog.exportSymbol('proto.libra.dbapi.v1.RegisterSchemaRequest', null, global);
goog.exportSymbol('proto.libra.dbapi.v1.RegisterSchemaResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libra.dbapi.v1.RegisterSchemaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libra.dbapi.v1.RegisterSchemaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libra.dbapi.v1.RegisterSchemaRequest.displayName = 'proto.libra.dbapi.v1.RegisterSchemaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libra.dbapi.v1.RegisterSchemaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libra.dbapi.v1.RegisterSchemaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libra.dbapi.v1.RegisterSchemaResponse.displayName = 'proto.libra.dbapi.v1.RegisterSchemaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libra.dbapi.v1.ArchiveGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libra.dbapi.v1.ArchiveGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libra.dbapi.v1.ArchiveGetRequest.displayName = 'proto.libra.dbapi.v1.ArchiveGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libra.dbapi.v1.ArchiveGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libra.dbapi.v1.ArchiveGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libra.dbapi.v1.ArchiveGetResponse.displayName = 'proto.libra.dbapi.v1.ArchiveGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libra.dbapi.v1.ArchiveSetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libra.dbapi.v1.ArchiveSetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libra.dbapi.v1.ArchiveSetRequest.displayName = 'proto.libra.dbapi.v1.ArchiveSetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.libra.dbapi.v1.ArchiveSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.libra.dbapi.v1.ArchiveSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.libra.dbapi.v1.ArchiveSetResponse.displayName = 'proto.libra.dbapi.v1.ArchiveSetResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libra.dbapi.v1.RegisterSchemaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.libra.dbapi.v1.RegisterSchemaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libra.dbapi.v1.RegisterSchemaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.RegisterSchemaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    descriptorSet: (f = msg.getDescriptorSet()) && google_protobuf_descriptor_pb.FileDescriptorSet.toObject(includeInstance, f),
    messageName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libra.dbapi.v1.RegisterSchemaRequest}
 */
proto.libra.dbapi.v1.RegisterSchemaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libra.dbapi.v1.RegisterSchemaRequest;
  return proto.libra.dbapi.v1.RegisterSchemaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libra.dbapi.v1.RegisterSchemaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libra.dbapi.v1.RegisterSchemaRequest}
 */
proto.libra.dbapi.v1.RegisterSchemaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_descriptor_pb.FileDescriptorSet;
      reader.readMessage(value,google_protobuf_descriptor_pb.FileDescriptorSet.deserializeBinaryFromReader);
      msg.setDescriptorSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libra.dbapi.v1.RegisterSchemaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libra.dbapi.v1.RegisterSchemaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libra.dbapi.v1.RegisterSchemaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.RegisterSchemaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescriptorSet();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_descriptor_pb.FileDescriptorSet.serializeBinaryToWriter
    );
  }
  f = message.getMessageName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.FileDescriptorSet descriptor_set = 1;
 * @return {?proto.google.protobuf.FileDescriptorSet}
 */
proto.libra.dbapi.v1.RegisterSchemaRequest.prototype.getDescriptorSet = function() {
  return /** @type{?proto.google.protobuf.FileDescriptorSet} */ (
    jspb.Message.getWrapperField(this, google_protobuf_descriptor_pb.FileDescriptorSet, 1));
};


/**
 * @param {?proto.google.protobuf.FileDescriptorSet|undefined} value
 * @return {!proto.libra.dbapi.v1.RegisterSchemaRequest} returns this
*/
proto.libra.dbapi.v1.RegisterSchemaRequest.prototype.setDescriptorSet = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libra.dbapi.v1.RegisterSchemaRequest} returns this
 */
proto.libra.dbapi.v1.RegisterSchemaRequest.prototype.clearDescriptorSet = function() {
  return this.setDescriptorSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libra.dbapi.v1.RegisterSchemaRequest.prototype.hasDescriptorSet = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message_name = 2;
 * @return {string}
 */
proto.libra.dbapi.v1.RegisterSchemaRequest.prototype.getMessageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.libra.dbapi.v1.RegisterSchemaRequest} returns this
 */
proto.libra.dbapi.v1.RegisterSchemaRequest.prototype.setMessageName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libra.dbapi.v1.RegisterSchemaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.libra.dbapi.v1.RegisterSchemaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libra.dbapi.v1.RegisterSchemaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.RegisterSchemaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    schema: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libra.dbapi.v1.RegisterSchemaResponse}
 */
proto.libra.dbapi.v1.RegisterSchemaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libra.dbapi.v1.RegisterSchemaResponse;
  return proto.libra.dbapi.v1.RegisterSchemaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libra.dbapi.v1.RegisterSchemaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libra.dbapi.v1.RegisterSchemaResponse}
 */
proto.libra.dbapi.v1.RegisterSchemaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libra.dbapi.v1.RegisterSchemaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libra.dbapi.v1.RegisterSchemaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libra.dbapi.v1.RegisterSchemaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.RegisterSchemaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchema();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string schema = 1;
 * @return {string}
 */
proto.libra.dbapi.v1.RegisterSchemaResponse.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.libra.dbapi.v1.RegisterSchemaResponse} returns this
 */
proto.libra.dbapi.v1.RegisterSchemaResponse.prototype.setSchema = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libra.dbapi.v1.ArchiveGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.libra.dbapi.v1.ArchiveGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libra.dbapi.v1.ArchiveGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.ArchiveGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    addIfNotFound: (f = msg.getAddIfNotFound()) && dbapi_v1_archive_pb.Archive.toObject(includeInstance, f),
    withLock: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libra.dbapi.v1.ArchiveGetRequest}
 */
proto.libra.dbapi.v1.ArchiveGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libra.dbapi.v1.ArchiveGetRequest;
  return proto.libra.dbapi.v1.ArchiveGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libra.dbapi.v1.ArchiveGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libra.dbapi.v1.ArchiveGetRequest}
 */
proto.libra.dbapi.v1.ArchiveGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new dbapi_v1_archive_pb.Archive;
      reader.readMessage(value,dbapi_v1_archive_pb.Archive.deserializeBinaryFromReader);
      msg.setAddIfNotFound(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithLock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libra.dbapi.v1.ArchiveGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libra.dbapi.v1.ArchiveGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libra.dbapi.v1.ArchiveGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.ArchiveGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddIfNotFound();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      dbapi_v1_archive_pb.Archive.serializeBinaryToWriter
    );
  }
  f = message.getWithLock();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.libra.dbapi.v1.ArchiveGetRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.libra.dbapi.v1.ArchiveGetRequest} returns this
 */
proto.libra.dbapi.v1.ArchiveGetRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Archive add_if_not_found = 2;
 * @return {?proto.libra.dbapi.v1.Archive}
 */
proto.libra.dbapi.v1.ArchiveGetRequest.prototype.getAddIfNotFound = function() {
  return /** @type{?proto.libra.dbapi.v1.Archive} */ (
    jspb.Message.getWrapperField(this, dbapi_v1_archive_pb.Archive, 2));
};


/**
 * @param {?proto.libra.dbapi.v1.Archive|undefined} value
 * @return {!proto.libra.dbapi.v1.ArchiveGetRequest} returns this
*/
proto.libra.dbapi.v1.ArchiveGetRequest.prototype.setAddIfNotFound = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libra.dbapi.v1.ArchiveGetRequest} returns this
 */
proto.libra.dbapi.v1.ArchiveGetRequest.prototype.clearAddIfNotFound = function() {
  return this.setAddIfNotFound(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libra.dbapi.v1.ArchiveGetRequest.prototype.hasAddIfNotFound = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool with_lock = 11;
 * @return {boolean}
 */
proto.libra.dbapi.v1.ArchiveGetRequest.prototype.getWithLock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.libra.dbapi.v1.ArchiveGetRequest} returns this
 */
proto.libra.dbapi.v1.ArchiveGetRequest.prototype.setWithLock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libra.dbapi.v1.ArchiveGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.libra.dbapi.v1.ArchiveGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libra.dbapi.v1.ArchiveGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.ArchiveGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    archive: (f = msg.getArchive()) && dbapi_v1_archive_pb.Archive.toObject(includeInstance, f),
    token: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libra.dbapi.v1.ArchiveGetResponse}
 */
proto.libra.dbapi.v1.ArchiveGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libra.dbapi.v1.ArchiveGetResponse;
  return proto.libra.dbapi.v1.ArchiveGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libra.dbapi.v1.ArchiveGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libra.dbapi.v1.ArchiveGetResponse}
 */
proto.libra.dbapi.v1.ArchiveGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dbapi_v1_archive_pb.Archive;
      reader.readMessage(value,dbapi_v1_archive_pb.Archive.deserializeBinaryFromReader);
      msg.setArchive(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libra.dbapi.v1.ArchiveGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libra.dbapi.v1.ArchiveGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libra.dbapi.v1.ArchiveGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.ArchiveGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArchive();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dbapi_v1_archive_pb.Archive.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional Archive archive = 1;
 * @return {?proto.libra.dbapi.v1.Archive}
 */
proto.libra.dbapi.v1.ArchiveGetResponse.prototype.getArchive = function() {
  return /** @type{?proto.libra.dbapi.v1.Archive} */ (
    jspb.Message.getWrapperField(this, dbapi_v1_archive_pb.Archive, 1));
};


/**
 * @param {?proto.libra.dbapi.v1.Archive|undefined} value
 * @return {!proto.libra.dbapi.v1.ArchiveGetResponse} returns this
*/
proto.libra.dbapi.v1.ArchiveGetResponse.prototype.setArchive = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libra.dbapi.v1.ArchiveGetResponse} returns this
 */
proto.libra.dbapi.v1.ArchiveGetResponse.prototype.clearArchive = function() {
  return this.setArchive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libra.dbapi.v1.ArchiveGetResponse.prototype.hasArchive = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string token = 10;
 * @return {string}
 */
proto.libra.dbapi.v1.ArchiveGetResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.libra.dbapi.v1.ArchiveGetResponse} returns this
 */
proto.libra.dbapi.v1.ArchiveGetResponse.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libra.dbapi.v1.ArchiveSetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.libra.dbapi.v1.ArchiveSetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libra.dbapi.v1.ArchiveSetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.ArchiveSetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    archive: (f = msg.getArchive()) && dbapi_v1_archive_pb.Archive.toObject(includeInstance, f),
    token: jspb.Message.getFieldWithDefault(msg, 10, ""),
    withUnlock: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libra.dbapi.v1.ArchiveSetRequest}
 */
proto.libra.dbapi.v1.ArchiveSetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libra.dbapi.v1.ArchiveSetRequest;
  return proto.libra.dbapi.v1.ArchiveSetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libra.dbapi.v1.ArchiveSetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libra.dbapi.v1.ArchiveSetRequest}
 */
proto.libra.dbapi.v1.ArchiveSetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dbapi_v1_archive_pb.Archive;
      reader.readMessage(value,dbapi_v1_archive_pb.Archive.deserializeBinaryFromReader);
      msg.setArchive(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithUnlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libra.dbapi.v1.ArchiveSetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libra.dbapi.v1.ArchiveSetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libra.dbapi.v1.ArchiveSetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.ArchiveSetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArchive();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dbapi_v1_archive_pb.Archive.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getWithUnlock();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional Archive archive = 1;
 * @return {?proto.libra.dbapi.v1.Archive}
 */
proto.libra.dbapi.v1.ArchiveSetRequest.prototype.getArchive = function() {
  return /** @type{?proto.libra.dbapi.v1.Archive} */ (
    jspb.Message.getWrapperField(this, dbapi_v1_archive_pb.Archive, 1));
};


/**
 * @param {?proto.libra.dbapi.v1.Archive|undefined} value
 * @return {!proto.libra.dbapi.v1.ArchiveSetRequest} returns this
*/
proto.libra.dbapi.v1.ArchiveSetRequest.prototype.setArchive = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libra.dbapi.v1.ArchiveSetRequest} returns this
 */
proto.libra.dbapi.v1.ArchiveSetRequest.prototype.clearArchive = function() {
  return this.setArchive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libra.dbapi.v1.ArchiveSetRequest.prototype.hasArchive = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string token = 10;
 * @return {string}
 */
proto.libra.dbapi.v1.ArchiveSetRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.libra.dbapi.v1.ArchiveSetRequest} returns this
 */
proto.libra.dbapi.v1.ArchiveSetRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool with_unlock = 11;
 * @return {boolean}
 */
proto.libra.dbapi.v1.ArchiveSetRequest.prototype.getWithUnlock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.libra.dbapi.v1.ArchiveSetRequest} returns this
 */
proto.libra.dbapi.v1.ArchiveSetRequest.prototype.setWithUnlock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.libra.dbapi.v1.ArchiveSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.libra.dbapi.v1.ArchiveSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.libra.dbapi.v1.ArchiveSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.ArchiveSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    archive: (f = msg.getArchive()) && dbapi_v1_archive_pb.Archive.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.libra.dbapi.v1.ArchiveSetResponse}
 */
proto.libra.dbapi.v1.ArchiveSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.libra.dbapi.v1.ArchiveSetResponse;
  return proto.libra.dbapi.v1.ArchiveSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.libra.dbapi.v1.ArchiveSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.libra.dbapi.v1.ArchiveSetResponse}
 */
proto.libra.dbapi.v1.ArchiveSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dbapi_v1_archive_pb.Archive;
      reader.readMessage(value,dbapi_v1_archive_pb.Archive.deserializeBinaryFromReader);
      msg.setArchive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.libra.dbapi.v1.ArchiveSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.libra.dbapi.v1.ArchiveSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.libra.dbapi.v1.ArchiveSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.libra.dbapi.v1.ArchiveSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArchive();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dbapi_v1_archive_pb.Archive.serializeBinaryToWriter
    );
  }
};


/**
 * optional Archive archive = 1;
 * @return {?proto.libra.dbapi.v1.Archive}
 */
proto.libra.dbapi.v1.ArchiveSetResponse.prototype.getArchive = function() {
  return /** @type{?proto.libra.dbapi.v1.Archive} */ (
    jspb.Message.getWrapperField(this, dbapi_v1_archive_pb.Archive, 1));
};


/**
 * @param {?proto.libra.dbapi.v1.Archive|undefined} value
 * @return {!proto.libra.dbapi.v1.ArchiveSetResponse} returns this
*/
proto.libra.dbapi.v1.ArchiveSetResponse.prototype.setArchive = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.libra.dbapi.v1.ArchiveSetResponse} returns this
 */
proto.libra.dbapi.v1.ArchiveSetResponse.prototype.clearArchive = function() {
  return this.setArchive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.libra.dbapi.v1.ArchiveSetResponse.prototype.hasArchive = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.libra.dbapi.v1);
